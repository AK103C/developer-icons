---
import Layout from "@/layouts/Layout.astro";
import { IconsList } from "@/components/iconsList";
import { categoriesData, iconsData } from "../../../../lib/iconsData";
import type { Category as CategoryType } from "../../../../lib/iconsData";
import { cn } from "@/lib/utils";
import { publicBaseUrl } from "@/config";

export function getStaticPaths() {
  return ["All", ...categoriesData].map((category) => ({
    params: {
      category: category
        .replace("DevOps & AI/ML", "DevOps")
        .replaceAll(" ", "-"),
    },
  }));
}

const { category } = Astro.params;

// Filter iconsData based on the selected category
const filteredIconsData =
  !category || category === "All"
    ? iconsData
    : iconsData.filter((icon) =>
        icon.categories.includes(
          category
            .replace("DevOps", "DevOps & AI/ML")
            .replaceAll("-", " ") as CategoryType
        )
      );
---

<Layout title="Icons | Developer Icons">
  <main class="w-full h-[calc(100vh-78px)] flex gap-4">
    <aside
      class="w-1/4 h-full border border-zinc-800 rounded-xl flex flex-col gap-2 text-zinc-400 p-3 sticky top-0"
    >
      {
        ["All", ...categoriesData].map((item) => (
          <a
            href={`${publicBaseUrl}/icons/${item.replace("DevOps & AI/ML", "DevOps").replaceAll(" ", "-")}`}
            class={cn(
              `w-full rounded-lg hover:bg-zinc-800 px-4 py-2 cursor-pointer`,
              {
                "bg-sky-700 bg-opacity-90 hover:bg-sky-700 hover:bg-opacity-90 text-zinc-200":
                  item
                    .replace("DevOps & AI/ML", "DevOps")
                    .replaceAll(" ", "-") === category,
              }
            )}
          >
            {item}
          </a>
        ))
      }
    </aside>

    <IconsList iconsData={filteredIconsData} client:load />
  </main>
</Layout>
